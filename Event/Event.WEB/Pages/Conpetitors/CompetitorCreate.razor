@page "/competitors/create"



@using Event.Shared.Entities;
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService

<h3>Crear Academia</h3>

<CompetitorForm @ref="competitorForm" Competitor="competitor" OnSubmit="Create" ReturnAction="Return" />

@code {
    private Competitor competitor = new();

    private CompetitorForm? competitorForm;

    private async Task Create()
    {
        var responseHttp = await repository.Post("/api/competitors", competitor);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message);
            return;
        }
        competitorForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/competitors");
    }

    private void Return()
    {
        navigationManager.NavigateTo("/competitors");
    }
}